/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package La_Prosperidad;

import java.awt.Color;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class Compras extends javax.swing.JFrame {
    public Factura frame;
    public static int [][]tienda;
    public static int []identificacion_vector;
    public static float ventas_totales;
    public static int a;
    /**
     * Creates new form Compras
     */
    public Compras() {
        initComponents();
        getContentPane().setBackground(Color.decode("#f6eee8"));
        setLocationRelativeTo(null);
        frame = new Factura();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        leer_codigo = new javax.swing.JTextField();
        leer_unidades = new javax.swing.JTextField();
        Comprar_producto = new javax.swing.JButton();
        Finalizar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        leer_identificacion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        leer_nombre = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel1.setText("CÓDIGO: ");

        jLabel2.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel2.setText("UNIDADES: ");

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB", 0, 24)); // NOI18N
        jLabel3.setText("COMPRAS");

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel4.setText("PRODUCTO");

        leer_codigo.setBackground(new java.awt.Color(230, 212, 225));
        leer_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leer_codigoActionPerformed(evt);
            }
        });

        leer_unidades.setBackground(new java.awt.Color(230, 212, 225));

        Comprar_producto.setBackground(new java.awt.Color(171, 132, 194));
        Comprar_producto.setText("Comprar producto");
        Comprar_producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Comprar_productoActionPerformed(evt);
            }
        });

        Finalizar.setBackground(new java.awt.Color(171, 132, 194));
        Finalizar.setText("Finalizar");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        jLabel5.setText("CLIENTE");

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel6.setText("IDENTIFICACIÓN:");

        leer_identificacion.setBackground(new java.awt.Color(230, 212, 225));
        leer_identificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leer_identificacionActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        jLabel7.setText("NOMBRE:");

        leer_nombre.setBackground(new java.awt.Color(230, 212, 225));
        leer_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leer_nombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(leer_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(63, 63, 63)
                                        .addComponent(Comprar_producto)
                                        .addGap(50, 50, 50)
                                        .addComponent(Finalizar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(leer_unidades, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(leer_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(79, 79, 79)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(leer_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(leer_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel4)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(leer_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(leer_unidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Comprar_producto)
                            .addComponent(Finalizar))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(leer_identificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed
        leer_nombre.setText("");
        leer_identificacion.setText("");
        //this.dispose();
        Factura.factura_matriz = factura_matriz;
        Factura.nombre = nombre;
        ventas_totales += total;
        Bodega.ventas_totales = ventas_totales;
        frame.setVisible(true);
    }//GEN-LAST:event_FinalizarActionPerformed
    
    
    int factura_matriz[][] = new int[50][4];
    int factura_acumulador[][] = new int[factura_matriz.length][4];
    String nombre;
    float compras_cliente = 0;
    int n = 0;
    float total;
    private void Comprar_productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Comprar_productoActionPerformed
        int identificacion, codigo, unidades, subtotal;
        float descuento = 0;
        int[] vector_codigos = new int[tienda.length];
        
        for (int i = 0; i < tienda.length; i++) {
            vector_codigos[i] = tienda[i][1];
        }
        int aux, min;
        for (int j = 0; j < (vector_codigos.length); j++) {
            min = j;
            for (int k = j+1; k < vector_codigos.length; k++) {
                if(vector_codigos[min] > vector_codigos[k]){
                    min = k;
                }
            }
            aux = vector_codigos[j];
            vector_codigos[j] = vector_codigos[min];
            vector_codigos[min] = aux;
        }
        
        try{
            nombre = leer_nombre.getText();
            identificacion = Integer.parseInt(leer_identificacion.getText());
            codigo = Integer.parseInt(leer_codigo.getText());
            unidades = Integer.parseInt(leer_unidades.getText());
            leer_codigo.setText("");
            leer_unidades.setText("");
            
            if((identificacion < 0)||(codigo < 0)||(unidades < 0)){
                JOptionPane.showMessageDialog(null, "DATOS NEGATIVOS NO VÁLIDOS", "ERROR", JOptionPane.ERROR_MESSAGE);
                leer_nombre.setText("");
                leer_identificacion.setText("");
            }else{
                int inf, sup, med;
                med = 0;
                boolean busqueda;
                inf = 0;
                sup = vector_codigos.length - 1;
                busqueda = false;
                while(inf <= sup && !busqueda){
                    med = (inf+sup)/2;
                    if (codigo == vector_codigos[med]) {
                        busqueda = true;
                    }else{
                        if (codigo > vector_codigos[med]) {
                            inf = med + 1;
                        }else{
                            sup = med - 1;
                        }
                    }
                }
                int pos = 0;
                for (int i = 0; i < vector_codigos.length; i++) {
                    if(tienda[i][1] == vector_codigos[med]){
                        pos = i;
                    }
                }
                if (busqueda == false) {
                    JOptionPane.showMessageDialog(null, "CODIGO NO ENCONTRADO", "ERROR", JOptionPane.ERROR_MESSAGE);
                }else{
                    if ((unidades > tienda[pos][3]) || ((tienda[pos][3]-unidades) < 5)) {
                        JOptionPane.showMessageDialog(null, "CANTIDAD INSUFICIENTE DE UNIDADES DISPONIBLES", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                    }else{
                        if(tienda[pos][2] == 0){
                            JOptionPane.showMessageDialog(null, "PRODUCTO FUERA DE CIRCULACION", "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
                        }else{
                            tienda[pos][3] =  tienda[pos][3] - unidades;
                                    
                            Object[][] actualizacion = new Object[tienda.length][tienda[0].length];
                            for (int i = 0; i < tienda.length; i++) {
                                for (int j = 0; j < tienda[i].length; j++) {
                                    actualizacion[i][j] = tienda[i][j];
                                }
                            }
                            Bodega.actualizacion = actualizacion;
                        
                            factura_matriz[n][0] = codigo;
                            factura_matriz[n][1] = unidades;
                            factura_matriz[n][2] = tienda[pos][4];
                            factura_matriz[n][3] = (tienda[pos][4])*(unidades);
                            
                            factura_acumulador[a][0] = a+1;
                            factura_acumulador[a][1] = codigo;
                            factura_acumulador[a][2] = unidades;
                            factura_acumulador[a][3] = factura_matriz[n][3];
                            Registros_ventas.factura_acumulador = factura_acumulador;
                            a++;
                            
                        
                            subtotal = 0;
                            for (int i = 0; i <= n; i++) {
                                subtotal += factura_matriz[i][3];
                            }
                        
                            int aux1, min1;

                        
                            for (int j = 0; j < (identificacion_vector.length - 1); j++) {
                                min1 = j;
                                for (int k = j+1; k < identificacion_vector.length; k++) {
                                    if(identificacion_vector[min1] > identificacion_vector[k]){
                                        min1 = k;
                                    }
                                }
                                aux1 = identificacion_vector[j];
                                identificacion_vector[j] = identificacion_vector[min1];
                                identificacion_vector[min1] = aux1;
                            }
                        
                            int inf1, sup1, med1;
                            boolean busqueda1;
                            inf1 = 0;
                            sup1 = identificacion_vector.length - 1;
                            busqueda1 = false;
                            while(inf1 <= sup1 && !busqueda1){
                                med1 = (inf1+sup1)/2;
                                if (identificacion == identificacion_vector[med1]) {
                                    busqueda1 = true;
                                }else{
                                    if (identificacion > identificacion_vector[med1]) {
                                        inf1 = med1 + 1;
                                    }else{
                                        sup1 = med1 - 1;
                                    }
                                }
                            }
                         
                            if(busqueda1){
                                compras_cliente += subtotal;
                                if(compras_cliente >= 500000){
                                    descuento = (float) (subtotal*(0.3));
                                }
                                else{
                                    if(compras_cliente >= 100000){
                                        descuento = (float) (subtotal*(0.2));
                                    }else{
                                        descuento = (float) (subtotal*(0.1));
                                    }
                                }
                            }
                            total = subtotal - descuento;
                        
                            n++;
                            Factura.subtotal = subtotal;
                            Factura.descuento = descuento;
                            Factura.total = total;
                        }
                    }
                }
            }
            
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "TIPO DE DATOS INVÁLIDOS", "ERROR", JOptionPane.ERROR_MESSAGE);
            leer_nombre.setText("");
            leer_identificacion.setText("");
            leer_codigo.setText("");
            leer_unidades.setText("");
        }
    }//GEN-LAST:event_Comprar_productoActionPerformed

    private void leer_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leer_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leer_codigoActionPerformed

    private void leer_identificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leer_identificacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leer_identificacionActionPerformed

    private void leer_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leer_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leer_nombreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Comprar_producto;
    private javax.swing.JButton Finalizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField leer_codigo;
    private javax.swing.JTextField leer_identificacion;
    private javax.swing.JTextField leer_nombre;
    private javax.swing.JTextField leer_unidades;
    // End of variables declaration//GEN-END:variables
}
